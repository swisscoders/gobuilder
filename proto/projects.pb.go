// Code generated by protoc-gen-go.
// source: projects.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	projects.proto

It has these top-level messages:
	GoBuilder
	Slave
	Project
	Source
	Blueprint
	Step
	SourceNotifier
	Scheduler
	Builder
	PeriodicScheduler
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

type GoBuilder struct {
	Project          []*Project `protobuf:"bytes,1,rep,name=project" json:"project,omitempty"`
	Slave            []*Slave   `protobuf:"bytes,2,rep,name=slave" json:"slave,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *GoBuilder) Reset()         { *m = GoBuilder{} }
func (m *GoBuilder) String() string { return proto1.CompactTextString(m) }
func (*GoBuilder) ProtoMessage()    {}

func (m *GoBuilder) GetProject() []*Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *GoBuilder) GetSlave() []*Slave {
	if m != nil {
		return m.Slave
	}
	return nil
}

type Slave struct {
	Name             *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Address          *string  `protobuf:"bytes,2,req,name=address" json:"address,omitempty"`
	Tag              []string `protobuf:"bytes,3,rep,name=tag" json:"tag,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Slave) Reset()         { *m = Slave{} }
func (m *Slave) String() string { return proto1.CompactTextString(m) }
func (*Slave) ProtoMessage()    {}

func (m *Slave) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Slave) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Slave) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

// Describes a project
type Project struct {
	// Name of the project (used for display and identification)
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// A source associated with this project (for example: SourceNotifier)
	Source *Source `protobuf:"bytes,2,req,name=source" json:"source,omitempty"`
	// Blueprints for this project
	Blueprint        []*Blueprint `protobuf:"bytes,3,rep,name=blueprint" json:"blueprint,omitempty"`
	Scheduler        []*Scheduler `protobuf:"bytes,4,rep,name=scheduler" json:"scheduler,omitempty"`
	Builder          []*Builder   `protobuf:"bytes,5,rep,name=builder" json:"builder,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto1.CompactTextString(m) }
func (*Project) ProtoMessage()    {}

func (m *Project) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Project) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Project) GetBlueprint() []*Blueprint {
	if m != nil {
		return m.Blueprint
	}
	return nil
}

func (m *Project) GetScheduler() []*Scheduler {
	if m != nil {
		return m.Scheduler
	}
	return nil
}

func (m *Project) GetBuilder() []*Builder {
	if m != nil {
		return m.Builder
	}
	return nil
}

type Source struct {
	XXX_extensions   map[int32]proto1.Extension `json:"-"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto1.CompactTextString(m) }
func (*Source) ProtoMessage()    {}

var extRange_Source = []proto1.ExtensionRange{
	{100, 536870911},
}

func (*Source) ExtensionRangeArray() []proto1.ExtensionRange {
	return extRange_Source
}
func (m *Source) ExtensionMap() map[int32]proto1.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto1.Extension)
	}
	return m.XXX_extensions
}

// A blueprint associates build steps with a name
type Blueprint struct {
	// Name of the blueprint (needs to be unique within a project)
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// List of steps to execute (in order) for this blueprint
	Step             []*Step `protobuf:"bytes,2,rep,name=step" json:"step,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Blueprint) Reset()         { *m = Blueprint{} }
func (m *Blueprint) String() string { return proto1.CompactTextString(m) }
func (*Blueprint) ProtoMessage()    {}

func (m *Blueprint) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Blueprint) GetStep() []*Step {
	if m != nil {
		return m.Step
	}
	return nil
}

type Step struct {
	// Command arguments as provided to execve(2)
	Argv             []string `protobuf:"bytes,1,rep,name=argv" json:"argv,omitempty"`
	Env              []string `protobuf:"bytes,2,rep,name=env" json:"env,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Step) Reset()         { *m = Step{} }
func (m *Step) String() string { return proto1.CompactTextString(m) }
func (*Step) ProtoMessage()    {}

func (m *Step) GetArgv() []string {
	if m != nil {
		return m.Argv
	}
	return nil
}

func (m *Step) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

type SourceNotifier struct {
	Address          *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SourceNotifier) Reset()         { *m = SourceNotifier{} }
func (m *SourceNotifier) String() string { return proto1.CompactTextString(m) }
func (*SourceNotifier) ProtoMessage()    {}

func (m *SourceNotifier) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

var E_SourceNotifier_Source = &proto1.ExtensionDesc{
	ExtendedType:  (*Source)(nil),
	ExtensionType: (*SourceNotifier)(nil),
	Field:         100,
	Name:          "proto.SourceNotifier.source",
	Tag:           "bytes,100,opt,name=source",
}

type Scheduler struct {
	Builder          []string                   `protobuf:"bytes,1,rep,name=builder" json:"builder,omitempty"`
	XXX_extensions   map[int32]proto1.Extension `json:"-"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Scheduler) Reset()         { *m = Scheduler{} }
func (m *Scheduler) String() string { return proto1.CompactTextString(m) }
func (*Scheduler) ProtoMessage()    {}

var extRange_Scheduler = []proto1.ExtensionRange{
	{100, 536870911},
}

func (*Scheduler) ExtensionRangeArray() []proto1.ExtensionRange {
	return extRange_Scheduler
}
func (m *Scheduler) ExtensionMap() map[int32]proto1.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto1.Extension)
	}
	return m.XXX_extensions
}

func (m *Scheduler) GetBuilder() []string {
	if m != nil {
		return m.Builder
	}
	return nil
}

// Builder is a control unit to run a blueprint on configured slaves
type Builder struct {
	Name             *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Blueprint        *string  `protobuf:"bytes,2,req,name=blueprint" json:"blueprint,omitempty"`
	Slave            []string `protobuf:"bytes,3,rep,name=slave" json:"slave,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Builder) Reset()         { *m = Builder{} }
func (m *Builder) String() string { return proto1.CompactTextString(m) }
func (*Builder) ProtoMessage()    {}

func (m *Builder) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Builder) GetBlueprint() string {
	if m != nil && m.Blueprint != nil {
		return *m.Blueprint
	}
	return ""
}

func (m *Builder) GetSlave() []string {
	if m != nil {
		return m.Slave
	}
	return nil
}

type PeriodicScheduler struct {
	// interval in seconds
	Interval         *int32 `protobuf:"varint,1,req,name=interval" json:"interval,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PeriodicScheduler) Reset()         { *m = PeriodicScheduler{} }
func (m *PeriodicScheduler) String() string { return proto1.CompactTextString(m) }
func (*PeriodicScheduler) ProtoMessage()    {}

func (m *PeriodicScheduler) GetInterval() int32 {
	if m != nil && m.Interval != nil {
		return *m.Interval
	}
	return 0
}

var E_PeriodicScheduler_Scheduler = &proto1.ExtensionDesc{
	ExtendedType:  (*Scheduler)(nil),
	ExtensionType: (*PeriodicScheduler)(nil),
	Field:         100,
	Name:          "proto.PeriodicScheduler.scheduler",
	Tag:           "bytes,100,opt,name=scheduler",
}

func init() {
	proto1.RegisterExtension(E_SourceNotifier_Source)
	proto1.RegisterExtension(E_PeriodicScheduler_Scheduler)
}
